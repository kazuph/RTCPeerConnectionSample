function PeerConnection(a){this.observer=this.bindObserver(a),this.peer=new webkitRTCPeerConnection({iceServers:server}),this.connected=!1,this.personID=null,this.dataChannel=null,this.fileChannel=null,this.init(),this.getUserMedia()}function MemberList(a){this.node=a,this.stub=document.createElement("li"),this.init()}function UUID(){this.uuid=[(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1),(65536*(1+Math.random())|0).toString(16).substring(1)].join(""),this.init()}var socketURL="ws://localhost:8124",doc=document,remote=doc.getElementById("remoteVideo"),local=doc.getElementById("localVideo"),members=doc.getElementById("members"),server=[{url:"stun:stun.l.google.com:19302"}],peer=null,memberList=null,chat=null,websokcet=null,accessName="",uuid="",Observer={};Observer.onAddStream=function(a){console.log("Stream attached"),remote.src=window.webkitURL.createObjectURL(a.stream)},Observer.onRemoveStream=function(){remote.src=""},Observer.onNegotiationNeeded=function(){console.log("Negotiation event")},Observer.onIceCandidate=function(a){a.candidate&&websocket.send(JSON.stringify({candidate:a.candidate,type:PeerConnection.MESSAGE_TYPE_CANDIDATE}))},Observer.onWebSocketMessage=function(a){var b,c,d=JSON.parse(a.data);switch(d.type){case PeerConnection.MESSAGE_TYPE_SDP:if(b=new RTCSessionDescription(d.sdp),d.to&&d.to===uuid)switch(b.type){case PeerConnection.DESCRIPTION_TYPE_OFFER:console.log("Remote description set"),console.dir(b),confirm("接続名："+d.accessName+"からCallが届いています。応答しますか？")&&this.peer.setRemoteDescription(b,function(){this.createAnswer(d.from,d.sdp)}.bind(this));break;case PeerConnection.DESCRIPTION_TYPE_ANSWER:console.log("Local description set"),console.dir(b),this.peer.setRemoteDescription(b),this.observer.onConnectionCompleted()}break;case PeerConnection.MESSAGE_TYPE_CANDIDATE:d.candidate&&(c=new RTCIceCandidate(d.candidate),this.addIceCandidate(c));break;case PeerConnection.MEMBER_ADDED:memberList.add(d.uuid,d.accessName);break;case PeerConnection.MEMBER_REMOVED:memberList.remove(d.uuid)}},Observer.onConnectionCompleted=function(){console.log("Peer connection succeed!"),remote.volume=1,local.classList.add("connected")},Observer.onClosed=function(){remote.stop(),local.classList.remove("connected")},Observer.onDataChannelOpened=function(){console.log("DataChannel opened."),console.log(this.dataChannel)},PeerConnection.DESCRIPTION_TYPE_OFFER="offer",PeerConnection.DESCRIPTION_TYPE_ANSWER="answer",PeerConnection.MESSAGE_TYPE_SDP="sdp",PeerConnection.MESSAGE_TYPE_CONNECTION="connection",PeerConnection.MESSAGE_TYPE_CANDIDATE="candidate",PeerConnection.MESSAGE_TYPE_CHAT="chat",PeerConnection.MEMBER_ADDED="member-added",PeerConnection.MEMBER_REMOVED="member-removed",PeerConnection.prototype.init=function(){this.peer.onicecandidate=this.observer.onIceCandidate,this.peer.onaddstream=this.observer.onAddStream,this.peer.onnegotiationneeded=this.observer.onNegotiationNeeded,websocket.onmessage=this.observer.onWebSocketMessage},PeerConnection.prototype.initDataChannel=function(){console.log("Initialized data channel"),this.dataChannel.onopen=this.observer.onDataChannelOpened||function(){},this.dataChannel.onmessage=this.observer.onDataChannelMessage||function(){}},PeerConnection.prototype.initFileChannel=function(){console.log("Initialized file channel"),this.fileChannel.onopen=this.observer.onFileChannelOpened||function(){},this.fileChannel.onmessage=this.observer.onFileChannelMessage||function(){}},PeerConnection.prototype.close=function(){this.peer.close(),this.obserber.onClosed()},PeerConnection.prototype.bindObserver=function(a){var b=this;return Object.keys(a).forEach(function(c){a[c]=a[c].bind(b)}),a},PeerConnection.prototype.addIceCandidate=function(a){this.peer.addIceCandidate(a)},PeerConnection.prototype.createOffer=function(a){console.log("Offer send: "+a),this.createDataChannel(),this.createFileChannel(),this.peer.createOffer(function(b){console.log("Offered SDP:"+b),this.peer.setLocalDescription(b,function(){websocket.send(JSON.stringify({type:PeerConnection.MESSAGE_TYPE_SDP,sdp:b,to:a,from:uuid,accessName:accessName}))}),this.personID=a}.bind(this))},PeerConnection.prototype.createAnswer=function(a){console.log("Answer send: "+a),this.peer.createAnswer(function(b){console.log("Answered SDP:"+b),this.peer.setLocalDescription(b,function(){websocket.send(JSON.stringify({type:PeerConnection.MESSAGE_TYPE_SDP,sdp:b,to:a,from:uuid}))}),this.personID=a,this.peer.ondatachannel=function(a){switch(console.log("Handled datachannel event"),console.log(a),a.channel.label){case"RTCPeerDataChannel":this.dataChannel=a.channel,this.initDataChannel();break;case"RTCPeerFileChannel":this.fileChannel=a.channel,this.initFileChannel()}this.observer.onConnectionCompleted()}.bind(this)}.bind(this))},PeerConnection.prototype.getUserMedia=function(){var a=this.peer;navigator.webkitGetUserMedia({audio:!0,video:!0},function(b){console.log("Media loaded"),local.src=window.webkitURL.createObjectURL(b),a.addStream(b)},this.errorHandler)},PeerConnection.prototype.createDataChannel=function(){this.dataChannel=this.peer.createDataChannel("RTCPeerDataChannel"),this.initDataChannel()},PeerConnection.prototype.createFileChannel=function(){this.fileChannel=this.peer.createDataChannel("RTCPeerFileChannel"),this.initFileChannel()},PeerConnection.prototype.errorHandler=function(a){console.log(a.name+":"+a.message)},MemberList.prototype.init=function(){this.node.addEventListener("click",function(a){var b;"LI"===a.target.tagName&&(b=a.target.getAttribute("data-uuid").slice(4),peer.createOffer(b))},!1)},MemberList.prototype.add=function(a,b){if(a!==uuid){var c=this.stub.cloneNode();c.setAttribute("data-uuid","uuid"+a),c.appendChild(document.createTextNode("member: "+b)),this.node.appendChild(c),c.classList.add("active")}},MemberList.prototype.remove=function(a){var b=this.node.querySelector('[data-uuid="uuid'+a+'"]'),c=this.node;b&&(b.classList.remove("active"),setTimeout(function(){c.removeChild(b)},1e3))},UUID.prototype.init=function(){var a=doc.createElement("p"),b=doc.getElementById("uuid");a.appendChild(doc.createTextNode("Your Peer connection id:  "+this.uuid)),b.appendChild(a),b.classList.add("show")},UUID.prototype.toString=function(){return this.uuid};do accessName=prompt("Enter your access name");while(""===accessName);""===accessName&&(alert("Connected Canceled."),location.reload()),local.volume=0,remote.volume=0,websocket=new WebSocket(socketURL),peer=new PeerConnection(Observer),memberList=new MemberList(members),uuid=new UUID+"",websocket.onopen=function(){websocket.send(JSON.stringify({type:PeerConnection.MEMBER_ADDED,accessName:accessName,uuid:uuid}))},window.addEventListener("unload",function(){websocket.send(JSON.stringify({type:PeerConnection.MEMBER_REMOVED,uuid:uuid}));try{peer.close()}catch(a){}}),window.peer=peer;